<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.tibco.com/schemas/TibUnit/Schema.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/schemas/BWUnitTest/Schema.xsd" xmlns:pfx2="com/tibco/pe/commands" xmlns:pfx="http://www.tibco.com/pe/WriteToLogActivitySchema">
    <xsd:import namespace="http://www.tibco.com/schemas/TibUnit/Schema.xsd" schemaLocation="/TibUnit/Schema.xsd"/>
    <pd:name>TibUnit/Assert.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="AssertionInput">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx4:AssertType"/>
                    <xsd:element name="UniqueName" type="xsd:string"/>
                    <xsd:element name="trueResult" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="messageCode" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="message" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="falseResult" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="messageCode" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="message" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="expectedResult" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:anyType" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="actualResult" minOccurs="0">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:anyType" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="TibUnit">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="processFileName" type="xsd:string"/>
                                <xsd:element name="parentFolder" type="xsd:string"/>
                                <xsd:element name="completeProcessName" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>29</pd:startX>
    <pd:startY>66</pd:startY>
    <pd:returnBindings>
        <AssertionOutput>
            <result>
                <xsl:value-of select="$Map-Result/pfx4:TibUnitTest/pfx4:result"/>
            </result>
            <messageCode>
                <xsl:value-of select="$Map-Result/pfx4:TibUnitTest/pfx4:messageCode"/>
            </messageCode>
            <message>
                <xsl:value-of select="$Map-Result/pfx4:TibUnitTest/pfx4:message"/>
            </message>
        </AssertionOutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="AssertionOutput">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="result" type="xsd:boolean"/>
                    <xsd:element name="messageCode" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="message" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>759</pd:endX>
    <pd:endY>65</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1450162064420</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>324</pd:x>
        <pd:y>252</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Evaluate">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>224</pd:x>
        <pd:y>65</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="result" type="xsd:boolean"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:choose>
                    <xsl:when test="contains($Start/AssertionInput/expectedResult/value, '$ERROR$')&#xA;&#xA;and&#xA;&#xA;( contains(upper-case($Start/AssertionInput/actualResult/value), 'ERROR') &#xA;or&#xA;contains(upper-case($Start/AssertionInput/actualResult/value), 'EXCEPTION'))">
                        <result>
                            <xsl:value-of select="true()"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_EQUAL">
                        <result>
                            <xsl:value-of select="$Start/AssertionInput/expectedResult/value = $Start/AssertionInput/actualResult/value"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_NOT_EQUAL">
                        <result>
                            <xsl:value-of select="$Start/AssertionInput/expectedResult/value !=$Start/AssertionInput/actualResult/value"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_GREATER_THAN">
                        <result>
                            <xsl:value-of select="$Start/AssertionInput/expectedResult/value > $Start/AssertionInput/actualResult/value"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_LESS_THAN">
                        <result>
                            <xsl:value-of select="$Start/AssertionInput/expectedResult/value &lt; $Start/AssertionInput/actualResult/value"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_GREATER_THAN_EQUAL">
                        <result>
                            <xsl:value-of select="$Start/AssertionInput/expectedResult/value >= $Start/AssertionInput/actualResult/value"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_LESS_THAN_EQUAL">
                        <result>
                            <xsl:value-of select="$Start/AssertionInput/expectedResult/value &lt;= $Start/AssertionInput/actualResult/value"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_EXISTS">
                        <result>
                            <xsl:value-of select="string-length($Start/AssertionInput/actualResult/value) > 0"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_NOT_EXISTS">
                        <result>
                            <xsl:value-of select="$Start/AssertionInput/actualResult/value='' or &#xA;not(exists($Start/AssertionInput/actualResult/value)) or&#xA;string-length($Start/AssertionInput/actualResult/value)=0"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_STRING_CONTAINS">
                        <result>
                            <xsl:value-of select="contains($Start/AssertionInput/actualResult/value, $Start/AssertionInput/expectedResult/value)"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_EXCEPTION">
                        <result>
                            <xsl:value-of select="contains(upper-case($Start/AssertionInput/actualResult/value), 'EXCEPTION')&#xA;&#xA;or &#xA;&#xA;contains(upper-case($Start/AssertionInput/actualResult/value), 'ERROR')"/>
                        </result>
                    </xsl:when>
                    <xsl:when test="$Start/AssertionInput/pfx4:AssertType=$_globalVariables/ns:GlobalVariables/TibUnit/ASSERT_STRING_NOT_CONTAINS">
                        <result>
                            <xsl:value-of select="not(contains($Start/AssertionInput/actualResult/value, $Start/AssertionInput/expectedResult/value))"/>
                        </result>
                    </xsl:when>
                    <xsl:otherwise>
                        <result>
                            <xsl:value-of select="false()"/>
                        </result>
                    </xsl:otherwise>
                </xsl:choose>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>448</pd:x>
        <pd:y>65</pd:y>
        <config>
            <variableConfig>/TibUnit/ResultXML.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>665</pd:x>
        <pd:y>65</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="tib:render-xml($Map-Result/pfx4:TibUnitTest)"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$Start/AssertionInput/UniqueName"/>
                </msgCode>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-Result">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>343</pd:x>
        <pd:y>65</pd:y>
        <config>
            <element ref="pfx4:TibUnitTest"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="exists($_error/ns1:ErrorReport/Msg)">
                    <pfx4:TibUnitTest>
                        <pfx4:processId>
                            <xsl:value-of select="$_processContext/ns1:ProcessContext/ProcessId"/>
                        </pfx4:processId>
                        <pfx4:category>
                            <xsl:value-of select="$Start/AssertionInput/TibUnit/parentFolder"/>
                        </pfx4:category>
                        <pfx4:name>
                            <xsl:value-of select="$Start/AssertionInput/TibUnit/processFileName"/>
                        </pfx4:name>
                        <pfx4:result>
                            <xsl:value-of select="false()"/>
                        </pfx4:result>
                        <pfx4:timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </pfx4:timestamp>
                        <pfx4:messageCode>
                            <xsl:value-of select="'--ERROR--'"/>
                        </pfx4:messageCode>
                        <pfx4:message>
                            <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                        </pfx4:message>
                    </pfx4:TibUnitTest>
                </xsl:when>
                <xsl:otherwise>
                    <pfx4:TibUnitTest>
                        <pfx4:processId>
                            <xsl:value-of select="$_processContext/ns1:ProcessContext/ProcessId"/>
                        </pfx4:processId>
                        <pfx4:category>
                            <xsl:value-of select="$Start/AssertionInput/TibUnit/parentFolder"/>
                        </pfx4:category>
                        <pfx4:name>
                            <xsl:value-of select="$Start/AssertionInput/TibUnit/processFileName"/>
                        </pfx4:name>
                        <pfx4:result>
                            <xsl:value-of select="$Evaluate/root/result"/>
                        </pfx4:result>
                        <pfx4:timestamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </pfx4:timestamp>
                        <xsl:choose>
                            <xsl:when test="$Evaluate/root/result='true'">
                                <xsl:if test="$Start/AssertionInput/trueResult/messageCode">
                                    <pfx4:messageCode>
                                        <xsl:value-of select="$Start/AssertionInput/trueResult/messageCode"/>
                                    </pfx4:messageCode>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Start/AssertionInput/falseResult/messageCode">
                                    <pfx4:messageCode>
                                        <xsl:value-of select="$Start/AssertionInput/falseResult/messageCode"/>
                                    </pfx4:messageCode>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="$Evaluate/root/result='true'">
                                <xsl:if test="$Start/AssertionInput/trueResult/message">
                                    <pfx4:message>
                                        <xsl:value-of select="$Start/AssertionInput/trueResult/message"/>
                                    </pfx4:message>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:if test="$Start/AssertionInput/falseResult/message">
                                    <pfx4:message>
                                        <xsl:value-of select="$Start/AssertionInput/falseResult/message"/>
                                    </pfx4:message>
                                </xsl:if>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$GetFileNames/fileNames/inputFileName">
                            <pfx4:inputFileName>
                                <xsl:value-of select="$GetFileNames/fileNames/inputFileName"/>
                            </pfx4:inputFileName>
                        </xsl:if>
                        <xsl:if test="$GetFileNames/fileNames/outputFileName">
                            <pfx4:outputFileName>
                                <xsl:value-of select="$GetFileNames/fileNames/outputFileName"/>
                            </pfx4:outputFileName>
                        </xsl:if>
                    </pfx4:TibUnitTest>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>342</pd:x>
        <pd:y>207</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SetVariable">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>560</pd:x>
        <pd:y>65</pd:y>
        <config>
            <variableConfig>/TibUnit/ResultXML.sharedvariable</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <pfx4:TibUnitTestResult>
                <xsl:attribute name="engineName">
                    <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@engineName"/>
                </xsl:attribute>
                <xsl:attribute name="startTime">
                    <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@startTime"/>
                </xsl:attribute>
                <xsl:if test="$GetVariable/pfx4:TibUnitTestResult/@endTime">
                    <xsl:attribute name="endTime">
                        <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@endTime"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:choose>
                    <xsl:when test="$Map-Result/pfx4:TibUnitTest/pfx4:result='true'">
                        <xsl:attribute name="passCount">
                            <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@passCount + 1"/>
                        </xsl:attribute>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:attribute name="passCount">
                            <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@passCount"/>
                        </xsl:attribute>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Map-Result/pfx4:TibUnitTest/pfx4:result='false'">
                        <xsl:attribute name="failCount">
                            <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@failCount + 1"/>
                        </xsl:attribute>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:attribute name="failCount">
                            <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@failCount"/>
                        </xsl:attribute>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:copy-of select="$GetVariable/pfx4:TibUnitTestResult/pfx4:TibUnitTest"/>
                <xsl:copy-of select="$Map-Result/pfx4:TibUnitTest"/>
            </pfx4:TibUnitTestResult>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log-1">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>414</pd:x>
        <pd:y>253</pd:y>
        <config>
            <role>Error</role>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <message>
                    <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport)"/>
                </message>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable-1">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>643</pd:x>
        <pd:y>257</pd:y>
        <config>
            <variableConfig>/TibUnit/ResultXML.sharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map-Result-1">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>528</pd:x>
        <pd:y>256</pd:y>
        <config>
            <element ref="pfx4:TibUnitTest"/>
        </config>
        <pd:inputBindings>
            <pfx4:TibUnitTest>
                <pfx4:processId>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProcessId"/>
                </pfx4:processId>
                <pfx4:category>
                    <xsl:value-of select="$Start/AssertionInput/TibUnit/parentFolder"/>
                </pfx4:category>
                <pfx4:name>
                    <xsl:value-of select="$Start/AssertionInput/TibUnit/processFileName"/>
                </pfx4:name>
                <pfx4:result>
                    <xsl:value-of select="false()"/>
                </pfx4:result>
                <pfx4:timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </pfx4:timestamp>
                <pfx4:messageCode>
                    <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                </pfx4:messageCode>
                <xsl:if test="$_error/ns1:ErrorReport/Msg">
                    <pfx4:message>
                        <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                    </pfx4:message>
                </xsl:if>
            </pfx4:TibUnitTest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SetVariable-1">
        <pd:type>com.tibco.pe.core.SetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.setSharedVariable</pd:resourceType>
        <pd:x>757</pd:x>
        <pd:y>259</pd:y>
        <config>
            <variableConfig>/TibUnit/ResultXML.sharedvariable</variableConfig>
            <showResult>true</showResult>
        </config>
        <pd:inputBindings>
            <pfx4:TibUnitTestResult>
                <xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="engineName">
                    <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@engineName"/>
                </xsl:attribute>
                <xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="startTime">
                    <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@startTime"/>
                </xsl:attribute>
                <xsl:if test="$GetVariable/pfx4:TibUnitTestResult/@endTime">
                    <xsl:attribute name="endTime">
                        <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@endTime"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:attribute name="passCount">
                    <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@passCount"/>
                </xsl:attribute>
                <xsl:attribute name="failCount">
                    <xsl:value-of select="$GetVariable/pfx4:TibUnitTestResult/@failCount + 1"/>
                </xsl:attribute>
                <xsl:copy-of select="$GetVariable/pfx4:TibUnitTestResult/pfx4:TibUnitTest"/>
                <xsl:copy-of select="$Map-Result/pfx4:TibUnitTest"/>
            </pfx4:TibUnitTestResult>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetFileNames">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>131</pd:x>
        <pd:y>65</pd:y>
        <config>
            <variableConfig>/TibUnit/CurrentFileNames.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetOutputFileName">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>95</pd:x>
        <pd:y>203</pd:y>
        <config>
            <variableConfig>/TibUnit/CurrentFileNames.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Write File">
        <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
        <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
        <pd:x>216</pd:x>
        <pd:y>205</pd:y>
        <config>
            <encoding>text</encoding>
            <compressFile>None</compressFile>
            <createMissingDirectories>true</createMissingDirectories>
        </config>
        <pd:inputBindings>
            <ns2:WriteActivityInputTextClass>
                <fileName>
                    <xsl:value-of select="concat(substring-before($GetOutputFileName/fileNames/outputFileName, '.xml'), 'ObtainedOutput.xml')"/>
                </fileName>
                <textContent>
                    <xsl:value-of select="$Start/AssertionInput/actualResult/value"/>
                </textContent>
            </ns2:WriteActivityInputTextClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Evaluate</pd:from>
        <pd:to>Map-Result</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Result</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>SetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetVariable</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Evaluate</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Map-Result</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>GetFileNames</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Log-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log-1</pd:from>
        <pd:to>Map-Result-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-Result-1</pd:from>
        <pd:to>GetVariable-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable-1</pd:from>
        <pd:to>SetVariable-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetVariable-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetFileNames</pd:from>
        <pd:to>Evaluate</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Evaluate</pd:from>
        <pd:to>GetOutputFileName</pd:to>
        <pd:xpathDescription>isObtainedOutputRequired</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$_globalVariables/ns:GlobalVariables/TibUnit/isObtainedOutputRequired = 'true'
and
$Evaluate/root/result = 'false'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Write File</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetOutputFileName</pd:from>
        <pd:to>Write File</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>